{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Vue from \"vue\";\nexport default {\n  name: \"CameraApi\",\n  components: {},\n  data: function data() {\n    return {\n      isCameraOpen: true,\n      canvasHeight: 400,\n      canvasWidth: 400,\n      mode: \"face\",\n      twocam: true,\n      item: []\n    };\n  },\n  created: function created() {},\n  mounted: function mounted() {\n    this.startCameraStream();\n  },\n  methods: {\n    startCameraStream: function startCameraStream() {\n      var _this = this;\n\n      var constraints;\n\n      if (this.mode == \"face\") {\n        constraints = {\n          audio: false,\n          video: {\n            width: {\n              ideal: 400\n            },\n            height: {\n              ideal: 400\n            },\n            facingMode: \"face\"\n          }\n        };\n      } else if (this.mode == \"environment\") {\n        constraints = {\n          audio: false,\n          video: {\n            width: {\n              ideal: 400\n            },\n            height: {\n              ideal: 400\n            },\n            facingMode: {\n              exact: \"environment\"\n            }\n          }\n        };\n      }\n\n      navigator.mediaDevices.getUserMedia(constraints).then(function (stream) {\n        _this.$refs.camera.srcObject = stream;\n      }).catch(function (error) {\n        alert(\"Browser doesn't support or there is some errors.\" + error);\n      });\n    },\n    stopCameraStream: function stopCameraStream() {\n      var tracks = this.$refs.camera.srcObject.getTracks();\n      tracks.forEach(function (track) {\n        track.stop();\n      });\n    },\n    capture: function capture() {\n      var FLASH_TIMEOUT = 50;\n      var self = this;\n      setTimeout(function () {\n        var context = self.$refs.canvas.getContext(\"2d\");\n        context.drawImage(self.$refs.camera, 0, 0, self.canvasWidth, self.canvasHeight);\n        var dataUrl = self.$refs.canvas.toDataURL(\"image/jpeg\").replace(\"image/jpeg\", \"image/octet-stream\");\n        self.addToPhotoGallery(dataUrl);\n        console.log(dataUrl);\n      }, FLASH_TIMEOUT);\n    },\n    addToPhotoGallery: function addToPhotoGallery(dataURI) {\n      this.item = dataURI;\n    },\n    returnAndSave: function returnAndSave() {\n      this.stopCameraStream();\n\n      if (this.item != null) {\n        Vue.prototype.$photo = this.item;\n      }\n\n      this.$router.push(\"/journal/new\");\n    },\n    close: function close() {\n      this.stopCameraStream();\n      this.$router.push(\"/journal/new\");\n    },\n    switchCam: function switchCam() {\n      this.stopCameraStream();\n\n      if (this.mode == \"environment\") {\n        this.mode = \"face\";\n      } else {\n        this.mode = \"environment\";\n      }\n\n      this.startCameraStream();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEA;AAEA;AACAA,mBADA;AAEAC,gBAFA;AAIAC,MAJA,kBAIA;AACA;AACAC,wBADA;AAEAC,uBAFA;AAGAC,sBAHA;AAIAC,kBAJA;AAKAC,kBALA;AAMAC;AANA;AAQA,GAbA;AAcAC,SAdA,qBAcA,CACA,CAfA;AAgBAC,SAhBA,qBAgBA;AACA;AACA,GAlBA;AAmBAC;AACAC,qBADA,+BACA;AAAA;;AACA;;AACA;AACAC;AACAC,sBADA;AAEAC;AACAC;AAAAC;AAAA,aADA;AAEAC;AAAAD;AAAA,aAFA;AAGAE;AAHA;AAFA;AAQA,OATA,MASA;AACAN;AACAC,sBADA;AAEAC;AACAC;AAAAC;AAAA,aADA;AAEAC;AAAAD;AAAA,aAFA;AAGAE;AACAC;AADA;AAHA;AAFA;AAUA;;AACAC,6BACAC,YADA,CACAT,WADA,EAEAU,IAFA,CAEA;AACA;AACA,OAJA,EAKAC,KALA,CAKA;AACAC;AACA,OAPA;AAQA,KAhCA;AAiCAC,oBAjCA,8BAiCA;AACA;AACAC;AACAC;AACA,OAFA;AAGA,KAtCA;AAuCAC,WAvCA,qBAuCA;AACA;AACA;AACAC;AACA;AACAC,0BACAC,iBADA,EAEA,CAFA,EAGA,CAHA,EAIAA,gBAJA,EAKAA,iBALA;AAOA,wCACAC,SADA,CACA,YADA,EAEAC,OAFA,CAEA,YAFA,EAEA,oBAFA;AAGAF;AACAG;AACA,OAdA,EAcAC,aAdA;AAeA,KAzDA;AA0DAC,qBA1DA,6BA0DAC,OA1DA,EA0DA;AACA;AACA,KA5DA;AA6DAC,iBA7DA,2BA6DA;AACA;;AACA;AACAC;AACA;;AACA;AACA,KAnEA;AAoEAC,SApEA,mBAoEA;AACA;AACA;AACA,KAvEA;AAwEAC,aAxEA,uBAwEA;AACA;;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA;;AACA;AACA;AAhFA;AAnBA","names":["name","components","data","isCameraOpen","canvasHeight","canvasWidth","mode","twocam","item","created","mounted","methods","startCameraStream","constraints","audio","video","width","ideal","height","facingMode","exact","navigator","getUserMedia","then","catch","alert","stopCameraStream","tracks","track","capture","setTimeout","context","self","toDataURL","replace","console","FLASH_TIMEOUT","addToPhotoGallery","dataURI","returnAndSave","Vue","close","switchCam"],"sourceRoot":"src/views","sources":["cameraView.vue"],"sourcesContent":["<template>\n  <div class=\"camera-box\">\n    <b-container class=\"header\">\n      <b-row>\n        <b-col class=\"mx-0 px-0\" cols=\"1\">\n          <b-button\n            class=\"ml-0 close\"\n            variant=\"outline-secondary\"\n            @click=\"close()\"\n          >\n            <b-icon icon=\"arrow-left\" />\n          </b-button>\n        </b-col>\n        <b-col class=\"px-0\" offset=\"8\">\n          <b-button\n            class=\"upload\"\n            v-on:click=\"returnAndSave()\"\n            variant=\"success\"\n          >\n            Upload\n          </b-button>\n        </b-col>\n      </b-row>\n    </b-container>\n\n    <b-container class=\"take-photo\">\n      <b-row>\n        <b-col class=\"yourCamera\" sm=\"12\">\n          <div v-if=\"isCameraOpen\" class=\"camera-canvas\">\n            <video\n              ref=\"camera\"\n              :width=\"canvasHeight\"\n              :height=\"canvasWidth\"\n              autoplay\n              id=\"cameratag\"\n            ></video>\n            <canvas\n              v-show=\"false\"\n              ref=\"canvas\"\n              :width=\"canvasHeight\"\n              :height=\"canvasWidth\"\n            ></canvas>\n          </div>\n        </b-col>\n        <b-col class=\"captureBtn\" sm=\"12\">\n          <b-button\n            pill\n            class=\"capturesave\"\n            variant=\"outline-success\"\n            @click=\"capture\"\n          >\n            <b-icon-camera-fill /> Capture\n          </b-button>\n            <b-icon-arrow-repeat\n              v-on:click=\"switchCam\"\n              ref=\"canshowswitch\"\n              font-scale=\"1.5\"\n              class=\"flipBtn\"\n            />\n        </b-col>\n\n        <div v-if=\"this.item != null\" class=\"imgshow\">\n          <img :src=\"this.item\" />\n        </div>\n      </b-row>\n    </b-container>\n  </div>\n</template>\n\n<script>\nimport Vue from \"vue\";\n\nexport default {\n  name: \"CameraApi\",\n  components: {\n  },\n  data() {\n    return {\n      isCameraOpen: true,\n      canvasHeight: 400,\n      canvasWidth: 400,\n      mode: \"face\",\n      twocam: true,\n      item: [],\n    };\n  },\n  created() {\n  },\n  mounted() {\n    this.startCameraStream();\n  },\n  methods: {\n    startCameraStream() {\n      var constraints;\n      if (this.mode == \"face\") {\n        constraints = {\n          audio: false,\n          video: {\n            width: { ideal: 400 },\n            height: { ideal: 400 },\n            facingMode: \"face\",\n          },\n        };\n      } else if (this.mode == \"environment\") {\n        constraints = {\n          audio: false,\n          video: {\n            width: { ideal: 400 },\n            height: { ideal: 400 },\n            facingMode: {\n              exact: \"environment\",\n            },\n          },\n        };\n      }\n      navigator.mediaDevices\n        .getUserMedia(constraints)\n        .then((stream) => {\n          this.$refs.camera.srcObject = stream;\n        })\n        .catch((error) => {\n          alert(\"Browser doesn't support or there is some errors.\" + error);\n        });\n    },\n    stopCameraStream() {\n      let tracks = this.$refs.camera.srcObject.getTracks();\n      tracks.forEach((track) => {\n        track.stop();\n      });\n    },\n    capture() {\n      const FLASH_TIMEOUT = 50;\n      let self = this;\n      setTimeout(() => {\n        const context = self.$refs.canvas.getContext(\"2d\");\n        context.drawImage(\n          self.$refs.camera,\n          0,\n          0,\n          self.canvasWidth,\n          self.canvasHeight\n        );\n        const dataUrl = self.$refs.canvas\n          .toDataURL(\"image/jpeg\")\n          .replace(\"image/jpeg\", \"image/octet-stream\");\n        self.addToPhotoGallery(dataUrl);\n        console.log(dataUrl);\n      }, FLASH_TIMEOUT);\n    },\n    addToPhotoGallery(dataURI) {\n      this.item = dataURI;\n    },\n    returnAndSave() {\n      this.stopCameraStream();\n      if (this.item != null) {\n        Vue.prototype.$photo = this.item;\n      }\n      this.$router.push(\"/journal/new\");\n    },\n    close() {\n      this.stopCameraStream();\n      this.$router.push(\"/journal/new\");\n    },\n    switchCam() {\n      this.stopCameraStream();\n      if (this.mode == \"environment\") {\n        this.mode = \"face\";\n      } else {\n        this.mode = \"environment\";\n      }\n      this.startCameraStream();\n    },\n  },\n};\n</script>\n\n<style scoped>\n@media (min-width: 600px) {\n  .camera-box {\n    margin-left: 200px;\n  }\n}\n\n@media only screen and (max-width: 600px) {\n  .camera-box {\n    width: 100%;\n    min-width: 360px;\n    margin-bottom: 100px;\n  }\n}\n\n/* Responsive Styling for Large screen */\n@media only screen and (min-width: 768px) {\n  .upload {\n    position: absolute;\n    right: 25px;\n  }\n  .close {\n    margin-left: 5px;\n  }\n}\n\n/* Responsive Styling for Small screen */\n@media only screen and (max-width: 768px) {\n  .upload {\n    position: absolute;\n    right: 10px;\n  }\n  .close {\n    margin-left: 5px;\n  }\n}\n\n/* Responsive Styling for Flip Camera Button */\n@media only screen and (min-width: 992px) {\n  .flipBtn{\n    display: none;\n  }\n}\n\n.flipBtn{\n  margin-left: 5px;\n}\n.camera-box {\n  padding: 2px;\n  min-height: 1100px;\n}\n.header {\n  margin-top: 20px;\n}\n.take-photo {\n  min-width: 300px;\n  height: 250px;\n  display: flex;\n  justify-content: center;\n  margin-top: 15px;\n}\n.imgshow {\n  margin-top: 30px;\n  margin-bottom: 100px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}