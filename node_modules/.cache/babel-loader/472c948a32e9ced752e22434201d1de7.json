{"ast":null,"code":"import _objectSpread from \"/workspaces/hot-pot-project/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// @ is an alias to /src\nimport journalCard from \"@/components/JournalCard.vue\";\nexport default {\n  name: \"PlantView\",\n  components: {\n    journalCard: journalCard\n  },\n  data: function data() {\n    return {\n      journals: {},\n      updates: {},\n      startDate: \"\",\n      endDate: \"\",\n      update_arr: []\n    };\n  },\n  created: function created() {\n    this.journals = JSON.parse(window.localStorage.getItem(\"origin_journals\"));\n    this.updates = JSON.parse(window.localStorage.getItem(\"update_journals\"));\n    console.log(666);\n  },\n  methods: {\n    AddJournal: function AddJournal() {\n      this.$router.push(\"/journal/new\");\n    },\n    chooseDateRange: function chooseDateRange() {\n      console.log(\"choose date range\");\n    },\n    delClick: function delClick(val) {\n      console.log(\"delete id:\", val);\n      var shown_ids = Object.keys(this.$journal_fixtures.shown);\n\n      if (shown_ids.includes(val)) {\n        var orj = JSON.parse(window.localStorage.getItem(\"origin_journals\"));\n        delete orj[val];\n        window.localStorage.setItem(\"origin_journals\", JSON.stringify(orj));\n        this.$set(this, \"journals\", orj);\n      } else {\n        var orju = JSON.parse(window.localStorage.getItem(\"update_journals\"));\n        delete orju[val];\n        window.localStorage.setItem(\"update_journals\", JSON.stringify(orju));\n        this.$set(this, \"updates\", orju);\n      }\n    },\n    checkUpdate: function checkUpdate() {\n      var getUpdate = JSON.parse(window.localStorage.getItem(\"update_journals\"));\n      console.log(Object.keys(getUpdate));\n\n      if (Object.keys(getUpdate).length > 0) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    getCurrentDate: function getCurrentDate() {\n      var date = new Date();\n      return date.toLocaleDateString();\n    },\n    //\n    // set maximum for startDate picker based on current date\n    //\n    setMax: function setMax() {\n      return new Date();\n    },\n    //\n    // set minimum for endDate picker based on selected startDate\n    //\n    setMin: function setMin() {\n      if (this.startDate != \"\") {\n        return this.startDate;\n      } else {\n        return \"\";\n      }\n    },\n    //\n    // create a function to process date filtering\n    //\n    filterDate: function filterDate() {\n      if (this.checkUpdate() === true) {\n        this.filter(\"update\");\n      }\n\n      this.filter(\"shown\");\n    },\n    filter: function filter(type) {\n      var tempt = {};\n      var data;\n\n      if (type === \"update\") {\n        data = this.$journal_fixtures.update;\n      } else {\n        data = this.$journal_fixtures.shown;\n      }\n\n      var start = new Date(this.startDate);\n      var end = new Date(this.endDate); // Iterate over all journal data\n\n      for (var journal in data) {\n        var curDate = new Date(data[journal].date); // if there is not startDate selected\n\n        if (this.startDate === \"\") {\n          if (this.endDate === \"\") {\n            tempt = _objectSpread({}, data);\n          } else {\n            if (curDate <= end) {\n              tempt[journal] = data[journal];\n            }\n          }\n        } // if startDate is selected\n        else {\n          if (this.endDate === \"\") {\n            if (curDate >= start) {\n              tempt[journal] = data[journal];\n            }\n          } else {\n            if (curDate >= start && curDate <= end) {\n              tempt[journal] = data[journal];\n            }\n          }\n        }\n\n        console.log(\"tempt:\", tempt);\n      }\n\n      if (type === \"update\") {\n        this.updates = tempt;\n      } else {\n        this.journals = tempt;\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsFA;AACA;AAEA;AACAA,mBADA;AAEAC;AACAC;AADA,GAFA;AAKAC;AACA;AACAC,kBADA;AAEAC,iBAFA;AAGAC,mBAHA;AAIAC,iBAJA;AAKAC;AALA;AAOA,GAbA;AAcAC,SAdA,qBAcA;AACA;AACA;AACAC;AACA,GAlBA;AAmBAC;AACAC,cADA,wBACA;AACA;AACA,KAHA;AAIAC,mBAJA,6BAIA;AACAH;AACA,KANA;AAOAI,YAPA,oBAOAC,GAPA,EAOA;AACAL;AACA;;AACA;AACA;AACA;AACAM;AACA;AACA,OALA,MAKA;AACA;AACA;AACAA;AACA;AACA;AACA,KArBA;AAuBAC,eAvBA,yBAuBA;AACA;AACAP;;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA;AACA,KA/BA;AAgCAQ,kBAhCA,4BAgCA;AACA;AACA;AACA,KAnCA;AAoCA;AACA;AACA;AACAC,UAvCA,oBAuCA;AACA;AACA,KAzCA;AA0CA;AACA;AACA;AACAC,UA7CA,oBA6CA;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA;AACA,KAnDA;AAoDA;AACA;AACA;AACAC,cAvDA,wBAuDA;AACA;AACA;AACA;;AACA;AACA,KA5DA;AA6DAC,UA7DA,kBA6DAC,IA7DA,EA6DA;AACA;AACA;;AACA;AACApB;AACA,OAFA,MAEA;AACAA;AACA;;AACA;AACA,uCATA,CAWA;;AACA;AACA,mDADA,CAEA;;AACA;AACA;AACAqB;AACA,WAFA,MAEA;AACA;AACAA;AACA;AACA;AACA,SARA,CASA;AATA,aAUA;AACA;AACA;AACAA;AACA;AACA,WAJA,MAIA;AACA;AACAA;AACA;AACA;AACA;;AACAd;AACA;;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA;AACA;AAxGA;AAnBA","names":["name","components","journalCard","data","journals","updates","startDate","endDate","update_arr","created","console","methods","AddJournal","chooseDateRange","delClick","val","window","checkUpdate","getCurrentDate","setMax","setMin","filterDate","filter","type","tempt"],"sourceRoot":"src/views","sources":["JournalView.vue"],"sourcesContent":["<template>\n  <div class=\"journal\">\n    <div  class=\"header\">\n       <h2>Garden Journal</h2>\n       <div class=\"smallicons\">\n         <b-button v-on:click=\"AddJournal\" size=\"sm\" variant=\"success\" class=\"addButton\">\n           <b-icon-journal-plus /> <p class=\"ButtonNote\">Let's Journal</p>\n         </b-button>\n        </div>\n         <p class=\"today\">Today is {{ getCurrentDate() }}</p>\n        <div class=\"time-box\">\n           <b-form-datepicker\n            v-model=\"startDate\"\n            class=\"startDatePicker\"\n            size=\"sm\"\n            :date-format-options=\"{\n              year: 'numeric',\n              month: '2-digit',\n              day: '2-digit',\n            }\"\n            locale=\"en\"\n            :max=\"setMax()\"\n            placeholder=\"start date\"\n            reset-button\n          ></b-form-datepicker>\n           <b-form-datepicker\n            v-model=\"endDate\"\n            class=\"endDatePicker_sm\"\n            size=\"sm\"\n            :date-format-options=\"{\n              year: 'numeric',\n              month: '2-digit',\n              day: '2-digit',\n            }\"\n            locale=\"en\"\n            :min=\"setMin()\"\n            placeholder=\"end date\"\n            reset-button\n            offset=\"-80\"\n          ></b-form-datepicker>\n          <!-- for large screen -->\n          <b-form-datepicker\n            v-model=\"endDate\"\n            class=\"endDatePicker\"\n            size=\"sm\"\n            :date-format-options=\"{\n              year: 'numeric',\n              month: '2-digit',\n              day: '2-digit',\n            }\"\n            locale=\"en\"\n            :min=\"setMin()\"\n            placeholder=\"end date\"\n            reset-button\n          ></b-form-datepicker>\n          <b-button size=\"sm\" variant=\"outline-success\" v-on:click=\"filterDate()\"\n            ><b-icon-check-circle-fill\n          /></b-button>\n        </div>\n    </div>\n    <b-container fluid class=\"main-view\">\n        <div class=\"scroller\">\n            <journalCard\n              id=\"update\"\n              v-for=\"jid in Object.keys(this.updates).reverse()\"\n              v-bind:journal_id=\"jid\"\n              :updated=\"true\"\n              :key=\"jid.id\"\n              @delData=\"delClick\"\n            />\n\n          <journalCard\n            id=\"original\"\n            v-for=\"(journal, jid) in journals\"\n            v-bind:journal_id=\"jid\"\n            :updated=\"false\"\n            :key=\"jid\"\n            @delData=\"delClick\"\n          />\n        </div>\n\n    </b-container>\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport journalCard from \"@/components/JournalCard.vue\";\n\nexport default {\n  name: \"PlantView\",\n  components: {\n    journalCard,\n  },\n  data: function () {\n    return {\n      journals: {},\n      updates: {},\n      startDate: \"\",\n      endDate: \"\",\n      update_arr: [],\n    };\n  },\n  created() {\n    this.journals = JSON.parse(window.localStorage.getItem(\"origin_journals\"));\n    this.updates = JSON.parse(window.localStorage.getItem(\"update_journals\"));\n      console.log(666);\n  },\n  methods: {\n    AddJournal() {\n      this.$router.push(\"/journal/new\");\n    },\n    chooseDateRange() {\n      console.log(\"choose date range\");\n    },\n    delClick(val) {\n      console.log(\"delete id:\", val);\n      let shown_ids = Object.keys(this.$journal_fixtures.shown);\n      if (shown_ids.includes(val)) {\n        var orj = JSON.parse(window.localStorage.getItem(\"origin_journals\"));\n        delete orj[val];\n        window.localStorage.setItem(\"origin_journals\", JSON.stringify(orj));\n        this.$set(this, \"journals\", orj);\n      } else {\n        var orju = JSON.parse(window.localStorage.getItem(\"update_journals\"));\n        delete orju[val];\n        window.localStorage.setItem(\"update_journals\", JSON.stringify(orju));\n        this.$set(this, \"updates\", orju);\n      }\n    },\n\n    checkUpdate() {\n      var getUpdate = JSON.parse(window.localStorage.getItem(\"update_journals\"));\n      console.log(Object.keys(getUpdate));\n      if (Object.keys(getUpdate).length > 0) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    getCurrentDate() {\n      var date = new Date();\n      return date.toLocaleDateString();\n    },\n    //\n    // set maximum for startDate picker based on current date\n    //\n    setMax() {\n      return new Date();\n    },\n    //\n    // set minimum for endDate picker based on selected startDate\n    //\n    setMin() {\n      if (this.startDate != \"\") {\n        return this.startDate;\n      } else {\n        return \"\";\n      }\n    },\n    //\n    // create a function to process date filtering\n    //\n    filterDate() {\n      if (this.checkUpdate() === true) {\n        this.filter(\"update\");\n      }\n      this.filter(\"shown\");\n    },\n    filter(type) {\n      let tempt = {};\n      let data;\n      if (type === \"update\") {\n        data = this.$journal_fixtures.update;\n      } else {\n        data = this.$journal_fixtures.shown;\n      }\n      let start = new Date(this.startDate);\n      let end = new Date(this.endDate);\n\n      // Iterate over all journal data\n      for (const journal in data) {\n        var curDate = new Date(data[journal].date);\n        // if there is not startDate selected\n        if (this.startDate === \"\") {\n          if (this.endDate === \"\") {\n            tempt = { ...data };\n          } else {\n            if (curDate <= end) {\n              tempt[journal] = data[journal];\n            }\n          }\n        }\n        // if startDate is selected\n        else {\n          if (this.endDate === \"\") {\n            if (curDate >= start) {\n              tempt[journal] = data[journal];\n            }\n          } else {\n            if (curDate >= start && curDate <= end) {\n              tempt[journal] = data[journal];\n            }\n          }\n        }\n        console.log(\"tempt:\", tempt);\n      }\n      if (type === \"update\") {\n        this.updates = tempt;\n      } else {\n        this.journals = tempt;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.header{\n  position: fixed;\n  z-index: 99;\n  background: #fff;\n  padding-bottom: 20px;\n  top:0;\n}\n.smallicons {\n  position: fixed;\n  right:20px;\n  top:20px;\n}\n.time-box{\n  display: flex;\n  justify-content: center;\n}\n.endDatePicker_sm{\n   margin:0 5px;\n}\n/* set layout for tablets, large tablets, and desktops*/\n@media only screen and (min-width:600px) {\n  .journal {\n    margin-left: 200px;\n  }\n  .header{\n    width: calc(100% - 200px);\n  }\n  .time-box{\n    padding: 0 15px;\n  }\n  .endDatePicker{\n    margin:0 15px;\n  }\n}\n\n/* set layout for phones */\n@media only screen and (max-width:600px) {\n  .journal{\n    width: 100%;\n    min-width: 400px;\n    margin-bottom:100px\n  }\n  .header{\n    width: 100%;\n  }\n  .time-box{\n    padding: 0 5px;\n  }\n  .smallicons {\n    right:10px;\n  }\n}\n\n/* Responsive styling for datepicker dropdown */\n@media screen and (max-width:515px){\n  .endDatePicker_sm {\n    display: flex;\n  }\n  .endDatePicker {\n    display: none\n  }\n}\n@media screen and (min-width:515px) and (max-width:600px){\n  .endDatePicker_sm {\n    display: none;\n  }\n  .endDatePicker {\n    display: flex;\n  }\n}\n@media screen and (min-width:600px) and (max-width:720px) {\n  .endDatePicker_sm {\n    display: flex;\n  }\n  .endDatePicker {\n    display: none\n  }\n}\n@media screen and (min-width:720px){\n  .endDatePicker_sm {\n    display: none;\n  }\n  .endDatePicker {\n    display: flex;\n  }\n}\n\n/* for large screen products */\n@media screen and (max-width: 960px){\n  .scroller {\n    position: relative;\n    column-count: 2 !important;\n    column-gap: 20px;\n  }\n}\n/* for tablets and phones */\n@media screen and (max-width: 768px){\n  .scroller {\n    position: relative;\n    column-count: 1 !important;\n    column-gap: 20px;\n  }\n  .addButton {\n    font-size: 16px;\n  }\n  .ButtonNote {\n    display: none;\n  }\n}\n@media screen and (min-width: 768px){\n  .addButton {\n    font-size: 18px;\n  }\n  .ButtonNote {\n    display: inline;\n  }\n}\n\nh2 {\n  margin-top: 20px;\n  margin-bottom: 15px;\n}\n\n.today {\n  font-size: 20px;\n  padding-left: 20px;\n}\n\n.time {\n  font-size: 20px;\n  padding-left: 16px;\n}\n\n.icons {\n  cursor: pointer;\n}\n\n.closeicons {\n  padding-left: 0px;\n}\n\n.main-view {\n  min-width: 300px;\n  max-width: 1200px;\n}\n.scroller {\n  position: relative;\n  column-count: 3;\n  -moz-column-count:3;\n  column-gap: 20px;\n  width: 100%;\n  margin-top: 170px;\n}\n\n</style>\n"]},"metadata":{},"sourceType":"module"}